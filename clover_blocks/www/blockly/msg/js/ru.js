// This file was automatically generated.  Do not modify.

'use strict';

Blockly.Msg["ADD_COMMENT"] = "Добавить комментарий";
Blockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Невозможно удалить переменную '%1' поскольку она является частью определения функции '%2'";
Blockly.Msg["CHANGE_VALUE_TITLE"] = "Изменить значение:";
Blockly.Msg["CLEAN_UP"] = "Очистить блоки";
Blockly.Msg["COLLAPSED_WARNINGS_WARNING"] = "Свернутые блоки содержат предупреждения.";
Blockly.Msg["COLLAPSE_ALL"] = "Свернуть блоки";
Blockly.Msg["COLLAPSE_BLOCK"] = "Свернуть блок";
Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "цвет 1";
Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "цвет 2";
Blockly.Msg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";
Blockly.Msg["COLOUR_BLEND_RATIO"] = "с соотношением";
Blockly.Msg["COLOUR_BLEND_TITLE"] = "смешать:";
Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Смешивает два цвета вместе в заданном соотношении (0.0 - 1.0).";
Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%A6%D0%B2%D0%B5%D1%82";
Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Выберите цвет из палитры.";
Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";
Blockly.Msg["COLOUR_RANDOM_TITLE"] = "случайный цвет";
Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Выберите цвет случайным образом.";
Blockly.Msg["COLOUR_RGB_BLUE"] = "синий";
Blockly.Msg["COLOUR_RGB_GREEN"] = "зеленый";
Blockly.Msg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";
Blockly.Msg["COLOUR_RGB_RED"] = "красный";
Blockly.Msg["COLOUR_RGB_TITLE"] = "цвет из состовляющих:";
Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "Создайте цвет с заданным количеством красного, зеленого и синего цветов. Все значения должны быть в диапазоне от 0 до 100.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "выйти из цикла";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "продолжить со следующей итерацией цикла";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Выйти из содержащего цикла.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Пропустите оставшуюся часть этого цикла и перейдите к следующей итерации.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Предупреждение: Этот блок может использоваться только в цикле.";
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "для каждого элемента %1 в списке %2";
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "Для каждого элемента в списке присвойте переменной '%1' значение этого элемента, а затем выполните несколько инструкций.";
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";
Blockly.Msg["CONTROLS_FOR_TITLE"] = "подсчитывать с %1 от %2 до %3 на %4";
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Заставляет переменную '%1' принимать значения от начального числа до конечного числа, с указанным интервалом, и выполняет указанные блоки.";
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Добавить условие в блок если.";
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "Добавить окончательное, перехватывающее все условие в блок если.";
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Добавить, удалить или изменить порядок разделов для переконфигурации этого блока если.";
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "иначе";
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "иначе если";
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "если";
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "Если значение истинно, то выполнить некоторые операторы.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "Если значение истинно, то выполнить первый блок операторов. В противном случае выполнить второй блок операторов.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "Если первое значение истинно, то выполнить первый блок операторов. В противном случае, если второе значение истинно, выполнить второй блок операторов.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "Если первое значение истинно, то выполнить первый блок операторов. В противном случае, если второе значение истинно, выполнить второй блок операторов. Если ни одно из значений не истинно, выполнить последний блок операторов.";
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%A6%D0%B8%D0%BA%D0%BB_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5)#%D0%A6%D0%B8%D0%BA%D0%BB_%D1%81%D0%BE_%D1%81%D1%87%D1%91%D1%82%D1%87%D0%B8%D0%BA%D0%BE%D0%BC_(%D0%B8%D0%BB%D0%B8_%D1%86%D0%B8%D0%BA%D0%BB_%D0%B4%D0%BB%D1%8F)";
Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "выполнить";
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "повторить %1 раз";
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Выполнить несколько операторов несколько раз.";
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "повторять до";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "повторять пока";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Пока значение ложно, выполнять некоторые операторы.";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Пока значение истинно, выполнять некоторые операторы.";
Blockly.Msg["DELETE_ALL_BLOCKS"] = "Удалить все %1 блоки?";
Blockly.Msg["DELETE_BLOCK"] = "Удалить блок";
Blockly.Msg["DELETE_VARIABLE"] = "Удалить переменную '%1'";
Blockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "Удалить %1 использований переменной '%2'?";
Blockly.Msg["DELETE_X_BLOCKS"] = "Удалить %1 блоков";
Blockly.Msg["DISABLE_BLOCK"] = "Отключить блок";
Blockly.Msg["DUPLICATE_BLOCK"] = "Дублировать";
Blockly.Msg["DUPLICATE_COMMENT"] = "Дублировать комментарий";
Blockly.Msg["ENABLE_BOCK"] = "Включить блок";
Blockly.Msg["EXPAND_ALL"] = "Развернуть блоки";
Blockly.Msg["EXPAND_BLOCK"] = "Развернуть блок";
Blockly.Msg["EXTERNAL_INPUTS"] = "Внешние входы";
Blockly.Msg["HELP"] = "Помощь";
Blockly.Msg["INLINE_INPUTS"] = "Встроенные входы";
Blockly.Msg["IOS_CANCEL"] = "Отмена";
Blockly.Msg["IOS_ERROR"] = "Ошибка";
Blockly.Msg["IOS_OK"] = "ОК";
Blockly.Msg["IOS_PROCEDURES_ADD_INPUT"] = "+ Добавить вход";
Blockly.Msg["IOS_PROCEDURES_ALLOW_STATEMENTS"] = "Разрешить операторы";
Blockly.Msg["IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR"] = "Эта функция имеет повторяющиеся входы.";
Blockly.Msg["IOS_PROCEDURES_INPUTS"] = "ВХОДЫ";
Blockly.Msg["IOS_VARIABLES_ADD_BUTTON"] = "Добавить";
Blockly.Msg["IOS_VARIABLES_ADD_VARIABLE"] = "+ Добавить переменную";
Blockly.Msg["IOS_VARIABLES_DELETE_BUTTON"] = "Удалить";
Blockly.Msg["IOS_VARIABLES_EMPTY_NAME_ERROR"] = "Нельзя использовать пустое имя переменной.";
Blockly.Msg["IOS_VARIABLES_RENAME_BUTTON"] = "Переименовать";
Blockly.Msg["IOS_VARIABLES_VARIABLE_NAME"] = "Имя переменной";
Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "создать пустой список";
Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Возвращает список длиной 0, не содержащий записей данных";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "список";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Добавить, удалить или изменить порядок разделов для переконфигурации этого блока списка.";
Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "создать список с";
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Добавить элемент в список.";
Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Создает список с любым количеством элементов.";
Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "первый";
Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "№ с конца";
Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "№";
Blockly.Msg["LISTS_GET_INDEX_GET"] = "взять";
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "взять и удалить";
Blockly.Msg["LISTS_GET_INDEX_LAST"] = "последний";
Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "случайный";
Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "удалить";
Blockly.Msg["LISTS_GET_INDEX_TAIL"] = "";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Возвращает первый элемент в списке.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Возвращает элемент в указанной позиции в списке.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Возвращает последний элемент в списке.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Возвращает случайный элемент в списке.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Удаляет и возвращает первый элемент в списке.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Удаляет и возвращает элемент в указанной позиции в списке.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Удаляет и возвращает последний элемент в списке.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Удаляет и возвращает случайный элемент в списке.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Удаляет первый элемент в списке.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Удаляет элемент в указанной позиции в списке.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Удаляет последний элемент в списке.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Удаляет случайный элемент в списке.";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "до № с конца";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "до №";
Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "до последнего";
Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";
Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "взять подсписок с первого";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "взять подсписок с № с конца";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "взять подсписок с №";
Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "";
Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Создает копию указанной части списка.";
Blockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 - это последний элемент.";
Blockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 - это первый элемент.";
Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "найти первое вхождение элемента";
Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
Blockly.Msg["LISTS_INDEX_OF_LAST"] = "найти последнее вхождение элемента";
Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Возвращает индекс первого/последнего вхождения элемента в списке. Возвращает %1, если элемент не найден.";
Blockly.Msg["LISTS_INLIST"] = "в списке";
Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";
Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 пустой?";
Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Возвращает истину, если список пуст.";
Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";
Blockly.Msg["LISTS_LENGTH_TITLE"] = "длина %1";
Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Возвращает длину списка.";
Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg["LISTS_REPEAT_TITLE"] = "создать список с элементом %1 повторенным %2 раз";
Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Создает список, состоящий из заданного значения, повторенного указанное количество раз.";
Blockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";
Blockly.Msg["LISTS_REVERSE_MESSAGE0"] = "обратить %1";
Blockly.Msg["LISTS_REVERSE_TOOLTIP"] = "Обращает копию списка.";
Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";
Blockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "как";
Blockly.Msg["LISTS_SET_INDEX_INSERT"] = "вставить в";
Blockly.Msg["LISTS_SET_INDEX_SET"] = "установить";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Вставляет элемент в начало списка.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Вставляет элемент в указанную позицию в списке.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Добавляет элемент в конец списка.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Вставляет элемент случайным образом в список.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Устанавливает первый элемент в списке.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Устанавливает элемент в указанной позиции в списке.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Устанавливает последний элемент в списке.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Устанавливает случайный элемент в списке.";
Blockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "возрастание";
Blockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "убывание";
Blockly.Msg["LISTS_SORT_TITLE"] = "сортировать %1 %2 %3";
Blockly.Msg["LISTS_SORT_TOOLTIP"] = "Сортирует копию списка.";
Blockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "алфавитный, без учета регистра";
Blockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "числовой";
Blockly.Msg["LISTS_SORT_TYPE_TEXT"] = "алфавитный";
Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "создать список из текста";
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "создать текст из списка";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Объединяет список текстов в один текст, разделенных разделителем.";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Разделяет текст на список текстов, разбивая по каждому разделителю.";
Blockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "с разделителем";
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "ложь";
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Возвращает либо истину, либо ложь.";
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "истина";
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D1%80%D0%B0%D0%B2%D0%B5%D0%BD%D1%81%D1%82%D0%B2%D0%BE";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Возвращает истину, если оба входа равны друг другу.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Возвращает истину, если первый вход больше второго входа.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Возвращает истину, если первый вход больше или равен второму входу.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Возвращает истину, если первый вход меньше второго входа.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Возвращает истину, если первый вход меньше или равен второму входу.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Возвращает истину, если оба входа не равны друг другу.";
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "не %1";
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Возвращает истину, если вход ложь. Возвращает ложь, если вход истина.";
Blockly.Msg["LOGIC_NULL"] = "пусто";
// Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://learn.microsoft.com/ru-ru/dotnet/csharp/language-reference/builtin-types/nullable-value-types";
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "Возвращает пустоту.";
Blockly.Msg["LOGIC_OPERATION_AND"] = "и";
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";
Blockly.Msg["LOGIC_OPERATION_OR"] = "или";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Возвращает истину, если оба входа истина.";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Возвращает истину, если хотя бы один из входов истина.";
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "проверить";
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%92%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9_%D0%B7%D0%BD%D0%B0%D0%BA";
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "если ложно";
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "если истинно";
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Проверьте условие в 'test'. Если условие истинно, возвращает значение 'if true'; в противном случае возвращает значение 'if false'";
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+";
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%90%D1%80%D0%B8%D1%84%D0%BC%D0%B5%D1%82%D0%B8%D0%BA%D0%B0";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Возвращает сумму двух чисел.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Возвращает частное двух чисел.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Возвращает разность двух чисел.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Возвращает произведение двух чисел.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Возвращает первое число, возведенное в степень второго числа.";
// Blockly.Msg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";
Blockly.Msg["MATH_ATAN2_HELPURL"] = "https://support.microsoft.com/ru-ru/office/%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D1%8F-atan2-c04592ab-b9e3-4908-b428-c96b3a565033";
Blockly.Msg["MATH_ATAN2_TITLE"] = "арктангенс от X:%1 Y:%2";
Blockly.Msg["MATH_ATAN2_TOOLTIP"] = "Возвращает арктангенс точки (X, Y) в градусах от -180 до 180.";
Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%98%D0%B4%D0%B8%D0%BE%D0%BC%D0%B0_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5)";
Blockly.Msg["MATH_CHANGE_TITLE"] = "изменить %1 на %2";
Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "Добавить число к переменной '%1'.";
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F_%D0%BA%D0%BE%D0%BD%D1%81%D1%82%D0%B0%D0%BD%D1%82%D0%B0";
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Возвращает одну из общих констант: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) или ∞ (бесконечность).";
// Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://developer.mozilla.org/ru/docs/Web/CSS/clamp";
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "ограничить значение %1 с минимумом %2 и максимумом %3";
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Ограничивает число указанными пределами (включительно).";
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "делится на";
Blockly.Msg["MATH_IS_EVEN"] = "четное";
Blockly.Msg["MATH_IS_NEGATIVE"] = "отрицательное";
Blockly.Msg["MATH_IS_ODD"] = "нечетное";
Blockly.Msg["MATH_IS_POSITIVE"] = "положительное";
Blockly.Msg["MATH_IS_PRIME"] = "простое";
Blockly.Msg["MATH_IS_TOOLTIP"] = "Проверяет, является ли число четным, нечетным, простым, целым, положительным, отрицательным или делится ли на определенное число. Возвращает истину или ложь.";
Blockly.Msg["MATH_IS_WHOLE"] = "целое";
// Blockly.Msg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%94%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5_%D1%81_%D0%BE%D1%81%D1%82%D0%B0%D1%82%D0%BA%D0%BE%D0%BC#%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D1%8F_%C2%ABmod%C2%BB_%D0%B8_%D1%81%D0%B2%D1%8F%D0%B7%D1%8C_%D1%81%D0%BE_%D1%81%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D1%8F%D0%BC%D0%B8";
Blockly.Msg["MATH_MODULO_TITLE"] = "остаток от %1 ÷ %2";
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "Возвращает остаток от деления двух чисел.";
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×";
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%A7%D0%B8%D1%81%D0%BB%D0%BE";
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "Число.";
Blockly.Msg["MATH_ONLIST_HELPURL"] = "";
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "среднее списка";
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "максимум списка";
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "медиана списка";
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "минимум списка";
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "моды списка";
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "случайный элемент списка";
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "стандартное отклонение списка";
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "сумма списка";
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Возвращает среднее (арифметическое) числовых значений в списке.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Возвращает наибольшее число в списке.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Возвращает медианное число в списке.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Возвращает наименьшее число в списке.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Возвращает список наиболее распространенных элементов в списке.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Возвращает случайный элемент из списка.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Возвращает стандартное отклонение списка.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Возвращает сумму всех чисел в списке.";
Blockly.Msg["MATH_POWER_SYMBOL"] = "^";
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%93%D0%B5%D0%BD%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80_%D1%81%D0%BB%D1%83%D1%87%D0%B0%D0%B9%D0%BD%D1%8B%D1%85_%D1%87%D0%B8%D1%81%D0%B5%D0%BB";
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "случайная дробь";
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Возвращает случайную дробь между 0.0 (включительно) и 1.0 (исключительно).";
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%93%D0%B5%D0%BD%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80_%D1%81%D0%BB%D1%83%D1%87%D0%B0%D0%B9%D0%BD%D1%8B%D1%85_%D1%87%D0%B8%D1%81%D0%B5%D0%BB";
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "случайное целое от %1 до %2";
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Возвращает случайное целое число между двумя указанными пределами включительно.";
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%9E%D0%BA%D1%80%D1%83%D0%B3%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "округлить";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "округлить вниз";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "округлить вверх";
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "Округляет число вверх или вниз.";
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%9A%D0%B2%D0%B0%D0%B4%D1%80%D0%B0%D1%82%D0%BD%D1%8B%D0%B9_%D0%BA%D0%BE%D1%80%D0%B5%D0%BD%D1%8C";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "модуль";
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "квадратный корень";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Возвращает абсолютное значение числа.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Возвращает e в степени числа.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Возвращает натуральный логарифм числа.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Возвращает логарифм числа по основанию 10.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Возвращает отрицание числа.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Возвращает 10 в степени числа.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Возвращает квадратный корень числа.";
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-";
Blockly.Msg["MATH_TRIG_ACOS"] = "арккосинус";
Blockly.Msg["MATH_TRIG_ASIN"] = "арксинус";
Blockly.Msg["MATH_TRIG_ATAN"] = "арктангенс";
Blockly.Msg["MATH_TRIG_COS"] = "косинус";
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%A2%D1%80%D0%B8%D0%B3%D0%BE%D0%BD%D0%BE%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5_%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8";
Blockly.Msg["MATH_TRIG_SIN"] = "синус";
Blockly.Msg["MATH_TRIG_TAN"] = "тангенс";
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Возвращает арккосинус числа.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Возвращает арксинус числа.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Возвращает арктангенс числа.";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Возвращает косинус угла в градусах (не в радианах).";
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Возвращает синус угла в градусах (не в радианах).";
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Возвращает тангенс угла в градусах (не в радианах).";
Blockly.Msg["NEW_COLOUR_VARIABLE"] = "Создать переменную цвета...";
Blockly.Msg["NEW_NUMBER_VARIABLE"] = "Создать числовую переменную...";
Blockly.Msg["NEW_STRING_VARIABLE"] = "Создать строковую переменную...";
Blockly.Msg["NEW_VARIABLE"] = "Создать переменную...";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "Новое имя переменной:";
Blockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "Новый тип переменной:";
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";
Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "разрешить операторы";
Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "с:";
Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D0%B4%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0";
Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Запускает пользовательскую функцию '%1'.";
Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D0%B4%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0";
Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Запускает пользовательскую функцию '%1' и использует ее вывод.";
Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "с:";
Blockly.Msg["PROCEDURES_CREATE_DO"] = "Создать '%1'";
Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "Опишите эту функцию...";
Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";
Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D0%B4%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0";
Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "сделать что-то";
Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "для";
Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Создает функцию без вывода.";
Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D0%B4%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0";
Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "вернуть";
Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Создает функцию с выводом.";
Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Предупреждение: Эта функция имеет повторяющиеся параметры.";
Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Подсветить определение функции";
Blockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "Если значение истинно, то вернуть второе значение.";
Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Предупреждение: Этот блок может использоваться только внутри определения функции.";
Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "имя входа:";
Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Добавить вход к функции.";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "входы";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Добавить, удалить или изменить порядок входов этой функции.";
Blockly.Msg["REDO"] = "Повторить";
Blockly.Msg["REMOVE_COMMENT"] = "Удалить комментарий";
Blockly.Msg["RENAME_VARIABLE"] = "Переименовать переменную...";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "Переименовать все переменные '%1' в:";
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg["TEXT_APPEND_TITLE"] = "к %1 добавить текст %2";
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "Добавить текст к переменной '%1'.";
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "в нижний регистр";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "В Заглавный Регистр";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "В ВЕРХНИЙ РЕГИСТР";
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Возвращает копию текста в другом регистре.";
Blockly.Msg["TEXT_CHARAT_FIRST"] = "взять первую букву";
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "взять букву № с конца";
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "взять букву №";
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";
Blockly.Msg["TEXT_CHARAT_LAST"] = "взять последнюю букву";
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "взять случайную букву";
Blockly.Msg["TEXT_CHARAT_TAIL"] = "";
Blockly.Msg["TEXT_CHARAT_TITLE"] = "в тексте %1 %2";
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Возвращает букву в указанной позиции.";
Blockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";
Blockly.Msg["TEXT_COUNT_MESSAGE0"] = "посчитать %1 в %2";
Blockly.Msg["TEXT_COUNT_TOOLTIP"] = "Подсчитать, сколько раз некоторый текст встречается в другом тексте.";
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Добавить элемент к тексту.";
Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "объединить";
Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Добавить, удалить или изменить порядок разделов для переконфигурации этого текстового блока.";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "до буквы № с конца";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "до буквы №";
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "до последней буквы";
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "в тексте";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "взять подстроку с первой буквы";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "взять подстроку с буквы № с конца";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "взять подстроку с буквы №";
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "";
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Возвращает указанную часть текста.";
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "найти первое вхождение текста";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "найти последнее вхождение текста";
Blockly.Msg["TEXT_INDEXOF_TITLE"] = "в тексте %1 %2 %3";
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Возвращает индекс первого/последнего вхождения первого текста во втором тексте. Возвращает %1, если текст не найден.";
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 пустой?";
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Возвращает истину, если предоставленный текст пуст.";
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "создать текст с";
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "Создает текст путем объединения любого количества элементов.";
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg["TEXT_LENGTH_TITLE"] = "длина %1";
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Возвращает количество букв (включая пробелы) в предоставленном тексте.";
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";
Blockly.Msg["TEXT_PRINT_TITLE"] = "напечатать %1";
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Напечатать заданный текст, число или другое значение.";
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Запросить у пользователя число.";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Запросить у пользователя текст.";
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "запросить число с сообщением";
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "запросить текст с сообщением";
Blockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";
Blockly.Msg["TEXT_REPLACE_MESSAGE0"] = "заменить %1 на %2 в %3";
Blockly.Msg["TEXT_REPLACE_TOOLTIP"] = "Заменить все вхождения некоторого текста внутри другого текста.";
Blockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";
Blockly.Msg["TEXT_REVERSE_MESSAGE0"] = "обратить %1";
Blockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Обращает порядок символов в тексте.";
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://ru.wikipedia.org/wiki/%D0%A1%D1%82%D1%80%D0%BE%D0%BA%D0%BE%D0%B2%D1%8B%D0%B9_%D1%82%D0%B8%D0%BF";
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "Буква, слово или строка текста.";
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "убрать пробелы с обеих сторон";
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "убрать пробелы слева";
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "убрать пробелы справа";
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Возвращает копию текста с удаленными пробелами с одного или обоих концов.";
Blockly.Msg["TODAY"] = "Сегодня";
Blockly.Msg["UNDO"] = "Отменить";
Blockly.Msg["UNNAMED_KEY"] = "безымянный";
Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "элемент";
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "Создать 'установить %1'";
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Возвращает значение этой переменной.";
Blockly.Msg["VARIABLES_SET"] = "установить %1 в %2";
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "Создать 'получить %1'";
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "Устанавливает эту переменную равной входному значению.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS"] = "Переменная с именем '%1' уже существует.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Переменная с именем '%1' уже существует для другого типа: '%2'.";
Blockly.Msg["WORKSPACE_ARIA_LABEL"] = "Рабочая область Blockly";
Blockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Скажите что-нибудь...";
Blockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
Blockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["LISTS_GET_INDEX_HELPURL"] = Blockly.Msg["LISTS_INDEX_OF_HELPURL"];
Blockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"];
Blockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];
Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];
Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];
Blockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];

Blockly.Msg["MATH_HUE"] = "230";
Blockly.Msg["LOOPS_HUE"] = "120";
Blockly.Msg["LISTS_HUE"] = "260";
Blockly.Msg["LOGIC_HUE"] = "210";
Blockly.Msg["VARIABLES_HUE"] = "330";
Blockly.Msg["TEXTS_HUE"] = "160";
Blockly.Msg["PROCEDURES_HUE"] = "290";
Blockly.Msg["COLOUR_HUE"] = "20";
Blockly.Msg["VARIABLES_DYNAMIC_HUE"] = "310";